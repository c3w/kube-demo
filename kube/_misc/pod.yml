kind: Service
apiVersion: v1
metadata:
  name: ingress-nginx
  labels:
    k8s-addon: ingress-nginx.addons.k8s.io
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-proxy-protocol: '*'
spec:
  type: LoadBalancer
  selector:
    app: nginx-helloworld
  ports:
  - name: http
    port: 80
    targetPort: http
  - name: https
    port: 443
    targetPort: https

---

#apiVersion: autoscaling/v1
#kind: HorizontalPodAutoscaler
#metadata:
#  name: nginx-helloworld-hpa
#  namespace: default
#  labels:
#    app: nginx-helloworld
#spec:
#  scaleTargetRef:
#    apiVersion: apps/v1beta1
#    kind: Deployment
#    name: c3w-nginx-helloworld
#  minReplicas: 2
#  maxReplicas: 20
#  targetCPUUtilizationPercentage: 3


apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: nginx-deployment
spec:
  replicas: 2
  template:
    metadata:
      labels:
        app: nginx-helloworld
        role: rolling-update
    spec:
      containers:
      - name: c3w-nginx-helloworld
        image: c3w/nginx-helloworld:${kVERSION}
        ports:
        - containerPort: 80
        readinessProbe:
          httpGet:
            path: /
            port: 80
---


apiVersion: apps/v1 # for versions before 1.9.0 use apps/v1beta2
kind: Deployment
metadata:
  name: c3w-nginx-helloworld
spec:
  selector:
    matchLabels:
      app: nginx-helloworld
  template:
    metadata:
      labels:
        app: nginx-helloworld
    spec:
      containers:
      - name: nginx-helloworld
        image: c3w/nginx-helloworld:0.6
        ports:
        - containerPort: 80
        readinessProbe:
          httpGet:
            path: /index.html
            port: 80
#        volumeMounts:
#        - mountPath: "/var/www/html"
#          name: html
#      volumes:
#      - name: html
#        persistentVolumeClaim:
#          claimName: task-pv-claim
